name: Continuous Integration

on:
    push:
        branches:  # Build 'master' and 'release' branches
            - 'master'
            - 'release'
        tags-ignore:  # No build on tags
            - '**'
    pull_request:  # Build any PR

jobs:
    quality:
        runs-on: ubuntu-latest
        name: Check Quality
        steps:
            - name: Checkout
              uses: actions/checkout@v2
            - name: Checkout Submodules
              uses: textbook/git-checkout-submodule-action@2.1.1
            - name: Setup Python
              uses: actions/setup-python@v1
              with:
                  # Kirin is Python 2.7 but the linting tools are Python 3.6
                  python-version: '3.6'
            - name: Upgrade pip
              run: python -m pip install --upgrade pip
            - name: Install Python Dependencies
              run: pip install --upgrade --requirement requirements.txt
            - name: Install Protobuf Dependencies
              run: sudo apt install --yes protobuf-compiler
            - name: Build Protobuf
              run: python setup.py build_pbf
            - name: Setup pre-commit
              run: pip install --upgrade pre-commit && pre-commit install
            - name: Quality Check
              run: pre-commit run --all --show-diff-on-failure
            - name: Code Linting
              # FIXME: 'pylint' is failing now, remove '|| exit 0' once fixed
              run: pylint --rcfile=pylint.rc --output-format=parseable kirin || exit 0
    tests:
        runs-on: ubuntu-latest
        name: Tests
        steps:
            - name: Checkout
              uses: actions/checkout@v2
              with:
                  # Need to fetch all commits for 'build_version' which needs
                  # the last tag's commit
                  fetch-depth: '0'
            # Need all the tags for 'build_version'
            - name: Pull Tags
              run: git fetch --tags
            - name: Checkout Submodules
              uses: textbook/git-checkout-submodule-action@2.1.1
            - name: Setup Python
              uses: actions/setup-python@v1
              with:
                  python-version: '2.7'
            - name: Upgrade pip
              run: python -m pip install --upgrade pip
            - name: Install Protobuf Dependencies
              run: sudo apt install --yes protobuf-compiler
            - name: Launch tests
              run: make test
            - name: Codecov.io Publication
              uses: codecov/codecov-action@v1
              with:
                  token: ${{ secrets.CODECOV_TOKEN }}
                  file: ./coverage.xml
            - name: SonarCloud Scan
              uses: SonarSource/sonarcloud-github-action@master
              env:
                  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
                  SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
